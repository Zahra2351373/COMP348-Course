(defun setdifference (lst1 lst2)
    (cond
        ((null lst1) '())
        ((null lst2) lst1)
        ((member (car lst1) lst2)(setdifference (cdr lst1) lst2))
        (t (cons (car lst1) (setdifference (cdr lst1) lst2)))))

(defun setintersection (lst1 lst2)
    (cond
        ((null lst1) '())
        ((null lst2) '())
        ((member (car lst1) lst2)
         (cons (car lst1)(setintersection (cdr lst1) lst2)))
        (t (setintersection (cdr lst1) lst2))))

(defun setunion (lst1 lst2)
    (cond
        ((null lst1) lst2)
        ((null lst2) lst1)
        ((member (car lst1) lst2)(setunion (cdr lst1) lst2))
        (t (cons (car lst1) (setunion (cdr lst1) lst2)))))

(defun setsymmetricdifference (lst1 lst2)
    (setdifference (union lst1 lst2)(intersection lst1 lst2)))

(defun setsymmetricdifference2 (lst1 lst2)
    (union (setdifference lst1 lst2)(setdifference lst2 lst1)))

(print(setsymmetricdifference '(a b c d e f) '(d e f g h)))
(print(setsymmetricdifference2 '(a b c d e f) '(d e f g h)))
(print(setsymmetricdifference '(a b (cd) e) '(e (f h))))
(print(setsymmetricdifference2 '(a b (cd) e) '(e (f h))))
