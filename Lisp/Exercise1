(print(cons 'a '()) )
(print(cons 'a (cons 'b ())) )
(print(cons 'a (cons (cons 'b (cons 'c '()))(cons 'd (cons 'e '())))))
(print (list 1 2 'a 3))
(print (list 1 '(2 3) 4))
(print (list '(+ 2 1) (+ 2 1)))
(print (list 1 2 3 (list 'a 'b 4) 5) )
(print (append '(1 2) '(3 4)) )
(print (append '(1 2 3) '() '(a) '(5 6)))
(print (append '(1 2 3 '(a b c)) '() '(d) '(4 5)) )
(print (append 1 '(4 5 6)) )
(print (append (list 1) '(4 5 6)))
(print (car '(a s d f)) )
(print (car '((a s) d f))  )
(print (cdr '(a s d f)))
(print (cdr '((a s) d f)) )
(print (cdr '((a s) (d f)))  )
(print (car (cdr '(1 (3 5) (7 11)))))
(print (cons '(a) '(b c))) 
(print (cons a '(b c))) 
(print (cons 'a '(b c))) 
(print (cons (car '(a)) (cdr '(a b c)))) 
(print (cons '(a) (car '((b c))))) 
(print (cons 'a (car '((b c))))) 
(print (cons 'a (car ('(b c))))) 
(print (cons 'a (cdr '(e b c)))) 
(print (cons 'a (cdr '('e 'b 'c)))) 
(print (cons (car '('a)) (cdr '('e 'b 'c)))) 
(print (cons 'a (cdr (list 'e 'b 'c)))) 
(print (list '(a) '(b c))) 
(print (list a b c))
(print (list 'a 'b 'c)) 
(print (list (car '(a)) 'b 'c)) 
(print (list (cdr '(a)) 'b 'c)) 
(print (list (cdr '(a b)) 'b 'c)) 
(print (list (cdr '(a 'b)) 'b 'c)) 
(print (list (cdr (list 'a 'b)) 'b 'c)) 
(print (list (cdr (list '(a) 'b)) 'b 'c)) 
(print (list (cdr (list 'a '(b))) 'b 'c)) 
(print (list cdr (list 'a '(b)) 'b 'c)) 
(print (append '(a) '(b c))) 
(print (append 'a '(b c))) 
(print (append (car '(a b)) '(b c))) 
(print (append (cdr '(a b)) '(b c))) 
(print (append '(car '(a)) '(b c))) 
(print (append '() '(b c))) 
(print (append nil '(b c))) 
(print (append (list '(a)) '(b c))) 
(print (append (list 'a) '(b c))) 
(print (append (cons 'a '(b c)))) 
(print (car (list '() '() '()))) 
(print(cdr (list '() '() '()))) 
(print (car (append '() '() '()))) 
(print (cdr (append '() '() '()))) 
(print (car (cons '() '()))) 
(print (cdr (cons '() '()))) 
(print (length (list '() '() '()))) 
(print (length (append '() '() '()))) 
(print (length (cons '() '())))
(print(listp '(a b c)) )
(print(listp 7) )
(print(let ((x 2) (y 3)) (+ x y)))

(let ((x 1)) 
(let ((x (+ x 1))) 
(print(+ x x))))

(let ((x 1)) 
(let ((y (+ x 1))) 
(print(+ y y))))

(let ((x 1) (y (+ x 1))) 
(print(+ y y)))

(let ((x 1) (y (+ x 1))) 
(print(+ x y)))

(let ((x 1)) 
(let ((y (+ x 1))) 
(print(+ x y))))

(let ((x 1) (y (+ x 1))) 
(print(+ x y)))

(let* ((x 1) (y (+ x 1))) 
(print(+ x y)))

(defun absdiff (x y) (if (> x y)
(- x y)
(- y x)))
(print(absdiff 3 5))

(print (mapcar #'+ (1 3) (4 5))) 
(print (mapcar #'+ '(1 3) '(4 5))) 
(print (mapcar #'+ '(1 3) '(4 5 6))) 
(print (mapcar #'+ '(4 5 6) '(1 3))) 
(print (mapcar #'+ '(1 3) (+ 4 5))) 
(print (mapcar #'+ '(1 3) '(+ 4 5))) 
(print (mapcar #'+ '(1 3))) ;(1 3)
(print (mapcar #'+ '(1) '(4 5) '(6 7 8 9)) ) ;(11)
(print (mapcar #'+ nil '(4 5) '(6 7 8 9))) 

(print (funcall #'+ 1 3 '(+ 4 5))) 
(print (funcall #'+ 1 3 (+ 4 5))) 
(print (funcall #'+ 1 3 (4 5))) 
(print (funcall #'+ 1 nil (4 5))) 
(print (funcall #'+ (car '(1 2)) 1 3 (+ 4 5))) 
(print (funcall #'+ (cdr '(1 2)) 1 3 (+ 4 5))) 

(print (apply #'+ 1 3 (4 4 5))) 
(print (apply #'+ 1 3 '(4 4 5))) 
(print (apply #'+ 1 3 (+ 4 4 5))) 
(print (apply #'+ 1 (+ 4 4 5) 3)) 
(print (apply #'+ 1 (+ 4 4 5) '(4 4 5))) 
(print (apply #'+ 1 '(4 4 5) '(4 4 5))) 
(print (apply #'+ 1 nil '(4 4 5)))
(print '('a 'b 'c))
(print (list ''a ''b ''c))
(print ( cons ''a (cons ''b (cons ''c ()))))
(print '((a) (b) (c)))
(print (list '(a) '(b) '(c)))
(print ( cons '(a) (cons '(b) (cons '(c) ()))))
(print '('(ab) '(c)))
(print (list ''(ab) ''cc))
